# Generated by Django 2.2.7 on 2019-11-26 12:18

import chat.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('MessageID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('MessageType', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('file', 'File'), ('adduser', 'Add User'), ('removeuser', 'Add User'), ('audiocall', 'Audio Call'), ('videocall', 'Video Call')], max_length=50, verbose_name='Message Type')),
                ('CreatedOn', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('RoomID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_chat.rooms_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='CallsLog',
            fields=[
                ('messages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chat.Messages')),
                ('StartedAt', models.DateTimeField(auto_now_add=True)),
                ('AnsweredAt', models.DateTimeField(blank=True, null=True)),
                ('EndedAt', models.DateTimeField(blank=True, null=True)),
                ('Duration', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('chat.messages',),
        ),
        migrations.CreateModel(
            name='MediaMessage',
            fields=[
                ('messages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chat.Messages')),
                ('Media', models.FileField(upload_to='')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('chat.messages',),
        ),
        migrations.CreateModel(
            name='TextMessage',
            fields=[
                ('messages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chat.Messages')),
                ('Content', models.TextField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('chat.messages',),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProfileImg', models.FileField(blank=True, null=True, upload_to=chat.models.path_and_rename, validators=[chat.models.validate_is_image])),
                ('LastSeen', models.DateTimeField(auto_now_add=True)),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profiles',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.AddField(
            model_name='messages',
            name='Room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='chat.Rooms'),
        ),
        migrations.AddField(
            model_name='messages',
            name='Sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='messages',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_chat.messages_set+', to='contenttypes.ContentType'),
        ),
        migrations.CreateModel(
            name='GroupRooms',
            fields=[
                ('rooms_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chat.Rooms')),
                ('RoomName', models.CharField(max_length=250, verbose_name='Room Name')),
                ('AdminMembers', models.ManyToManyField(related_name='adminmembers', to=settings.AUTH_USER_MODEL)),
                ('Members', models.ManyToManyField(related_name='members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('chat.rooms',),
        ),
        migrations.CreateModel(
            name='DirectRooms',
            fields=[
                ('rooms_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chat.Rooms')),
                ('User1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user1', to=settings.AUTH_USER_MODEL)),
                ('User2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('User1', 'User2')},
            },
            bases=('chat.rooms',),
        ),
    ]
